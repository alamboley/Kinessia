package pages {	import com.gaiaframework.api.Gaia;	import com.gaiaframework.api.IBitmap;	import com.gaiaframework.events.GaiaSWFAddressEvent;	import com.gaiaframework.templates.AbstractPage;	import com.greensock.TweenMax;	import flash.display.Bitmap;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	public class NavPage extends AbstractPage {		public var menu:MovieClip;		public var footer:MovieClip;		private var _logo:Sprite;		private var _previousButton:MovieClip;		public function NavPage() {			super();			alpha = 0;		}		override public function transitionIn():void {			super.transitionIn();			TweenMax.to(this, 0.4, {alpha:1, onComplete:transitionInComplete});						_menu();			_footer();			stage.addEventListener(Event.RESIZE, _onResize);		}		private function _footer():void {						footer.x = (stage.stageWidth - footer.width) / 2 + 50;			footer.y = 1250;						footer.facebook.buttonMode = true;			footer.twitter.buttonMode = true;		}		private function _menu():void {						menu.x = (stage.stageWidth - menu.width) / 2;			menu.y = 190;			menu.home.hoverHome.alpha = menu.game.hoverGame.alpha = menu.howToPlay.hoverHowToPlay.alpha = menu.machine.hoverMachine.alpha = menu.further.hoverFurther.alpha = 0;			menu.home.hoverHome.buttonMode = menu.game.hoverGame.buttonMode = menu.howToPlay.hoverHowToPlay.buttonMode = menu.machine.hoverMachine.buttonMode = menu.further.hoverFurther.buttonMode = true;			_previousButton = menu.home.hoverHome;			_logo = new Sprite();			addChild(_logo);			_logo.addChild(new Bitmap(IBitmap(assets.logo).bitmapData));			_logo.x = (stage.stageWidth - _logo.width) / 2;			_logo.y = 5;			_logo.buttonMode = true;			_logo.name = "logo";			_logo.addEventListener(MouseEvent.CLICK, _gotoPage);			menu.home.hoverHome.addEventListener(MouseEvent.CLICK, _gotoPage);			menu.game.hoverGame.addEventListener(MouseEvent.CLICK, _gotoPage);			menu.howToPlay.hoverHowToPlay.addEventListener(MouseEvent.CLICK, _gotoPage);			menu.machine.hoverMachine.addEventListener(MouseEvent.CLICK, _gotoPage);			menu.further.hoverFurther.addEventListener(MouseEvent.CLICK, _gotoPage);			menu.home.hoverHome.addEventListener(MouseEvent.MOUSE_OVER, _overMenu);			menu.game.hoverGame.addEventListener(MouseEvent.MOUSE_OVER, _overMenu);			menu.howToPlay.hoverHowToPlay.addEventListener(MouseEvent.MOUSE_OVER, _overMenu);			menu.machine.hoverMachine.addEventListener(MouseEvent.MOUSE_OVER, _overMenu);			menu.further.hoverFurther.addEventListener(MouseEvent.MOUSE_OVER, _overMenu);			menu.home.hoverHome.addEventListener(MouseEvent.MOUSE_OUT, _outMenu);			menu.game.hoverGame.addEventListener(MouseEvent.MOUSE_OUT, _outMenu);			menu.howToPlay.hoverHowToPlay.addEventListener(MouseEvent.MOUSE_OUT, _outMenu);			menu.machine.hoverMachine.addEventListener(MouseEvent.MOUSE_OUT, _outMenu);			menu.further.hoverFurther.addEventListener(MouseEvent.MOUSE_OUT, _outMenu);			switch (Gaia.api.getCurrentBranch()) {								case "index/nav/home":					_previousButton = menu.home.hoverHome;					_show(menu.home.hoverHome);					break;				case "index/nav/game":					_previousButton = menu.game.hoverGame;					_show(menu.game.hoverGame);					break;				case "index/nav/howToPlay":					_previousButton = menu.howToPlay.hoverHowToPlay;					_show(menu.howToPlay.hoverHowToPlay);					break;				case "index/nav/machine":					_previousButton = menu.machine.hoverMachine;					_show(menu.machine.hoverMachine);					break;				case "index/nav/further":					_previousButton = menu.further.hoverFurther;					_show(menu.further.hoverFurther);					break;			}		}		override public function onDeeplink(aEvt:GaiaSWFAddressEvent):void {						switch (aEvt.branch) {				case "index/nav/home":					_show(menu.home.hoverHome);					_previousButton = menu.home.hoverHome;					break;				case "index/nav/game":					_show(menu.game.hoverGame);					_previousButton = menu.game.hoverGame;					break;				case "index/nav/howToPlay":					_show(menu.howToPlay.hoverHowToPlay);					_previousButton = menu.howToPlay.hoverHowToPlay;					break;				case "index/nav/machine":					_show(menu.machine.hoverMachine);					_previousButton = menu.machine.hoverMachine;					break;				case "index/nav/further":					_show(menu.further.hoverFurther);					_previousButton = menu.further.hoverFurther;					break;			}		}		private function _show(toShow:MovieClip):void {			TweenMax.to(_previousButton, 0.5, {alpha:0});			_previousButton.addEventListener(MouseEvent.MOUSE_OUT, _outMenu);			TweenMax.to(toShow, 0.5, {alpha:1});			toShow.removeEventListener(MouseEvent.MOUSE_OUT, _outMenu);		}		private function _gotoPage(mEvt:MouseEvent):void {			switch (mEvt.target.name) {				case "logo":					Gaia.api.goto(Pages.HOME);					break;				case "hoverHome":					Gaia.api.goto(Pages.HOME);					break;				case "hoverGame":					Gaia.api.goto(Pages.GAME);					break;				case "hoverHowToPlay":					Gaia.api.goto(Pages.HOWTOPLAY);					break;				case "hoverMachine":					Gaia.api.goto(Pages.MACHINE);					break;				case "hoverFurther":					Gaia.api.goto(Pages.FURTHER);					break;			}		}		private function _overMenu(mEvt:MouseEvent):void {			TweenMax.to(mEvt.target, 0.4, {alpha:1});		}		private function _outMenu(mEvt:MouseEvent):void {			TweenMax.to(mEvt.target, 0.4, {alpha:0});		}		private function _onResize(evt:Event):void {						menu.x = (stage.stageWidth - menu.width) / 2;			footer.x = (stage.stageWidth - footer.width) / 2 + 50;			_logo.x = (stage.stageWidth - _logo.width) / 2;		}		override public function transitionOut():void {			super.transitionOut();			TweenMax.to(this, 0.4, {alpha:0, onComplete:transitionOutComplete});		}	}}